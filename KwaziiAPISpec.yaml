---
openapi: 3.0.0
info:
  title: Kwazii Express API
  description: REST API for Kwazii application
  version: 1.0.0
servers:
  - url: https://api.kwazii.com
tags:
  - name: accounts
    description: Account management APIs
  - name: auth
    description: Authentication APIs
  - name: keys
    description: API key management APIs
  - name: projects
    description: Project management APIs
  - name: integrations
    description: Integration management APIs
  - name: reamaze
    description: Reamaze APIs
  - name: usage
    description: Usage APIs
  - name: datasources
    description: Datasource management APIs
  - name: content
    description: Content generation APIs
paths:
  /v1/accounts/register:
    post:
      tags:
        - accounts
      summary: Register a new user account
      operationId: registerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAccountRequest"
        required: true
      responses:
        "200":
          description: Account registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/accounts/unregister:
    post:
      tags:
        - accounts
      summary: Unregister an existing user account
      operationId: unregisterAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnregisterAccountRequest"
        required: true
      responses:
        "200":
          description: Account unregistered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/accounts/verify:
    get:
      tags:
        - accounts
      summary: Verify a user account
      operationId: verifyAccount
      parameters:
        - name: ec
          in: query
          description: Encoded email and verification code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Account verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/auth/login:
    post:
      tags:
        - auth
      summary: Login to retrieve access token
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/auth/logout:
    post:
      tags:
        - auth
      summary: Logout and invalidate access token
      operationId: logout
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/auth/refresh-token:
    post:
      tags:
        - auth
      summary: Refresh access token
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
        required: true
      responses:
        "200":
          description: Token refresh successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/keys:
    post:
      tags:
        - keys
      summary: Create a new API key
      operationId: createAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAPIKeyRequest"
        required: true
      responses:
        "200":
          description: API key created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAPIKeyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - keys
      summary: Get all API keys
      operationId: getAPIKeys
      responses:
        "200":
          description: API keys retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAPIKeysResponse"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/v1/keys/{apiKeyId}":
    get:
      tags:
        - keys
      summary: Get an API key
      operationId: getAPIKey
      parameters:
        - name: apiKeyId
          in: path
          description: API key ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: API key details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAPIKeyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - keys
      summary: Delete an API key
      operationId: deleteAPIKey
      parameters:
        - name: apiKeyId
          in: path
          description: API key ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: API key deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/projects:
    post:
      tags:
        - projects
      summary: Create a new project
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectRequest"
        required: true
      responses:
        "200":
          description: Project created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProjectResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - projects
      summary: Get all projects
      operationId: getProjects
      responses:
        "200":
          description: Projects retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProjectsResponse"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/v1/projects/{projectId}":
    get:
      tags:
        - projects
      summary: Get a project
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Project details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProjectResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - projects
      summary: Delete a project
      operationId: deleteProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Project deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/integrations:
    post:
      tags:
        - integrations
      summary: Create a new integration
      operationId: createIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateIntegrationRequest"
        required: true
      responses:
        "200":
          description: Integration created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIntegrationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - integrations
      summary: Get all integrations
      operationId: getIntegrations
      responses:
        "200":
          description: Integrations retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetIntegrationsResponse"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/v1/integrations/{integrationId}":
    get:
      tags:
        - integrations
      summary: Get an integration
      operationId: getIntegration
      parameters:
        - name: integrationId
          in: path
          description: Integration ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Integration details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetIntegrationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - integrations
      summary: Delete an integration
      operationId: deleteIntegration
      parameters:
        - name: integrationId
          in: path
          description: Integration ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Integration deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/reamaze:
    post:
      tags:
        - reamaze
      summary: Search Reamaze
      operationId: searchReamaze
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchReamazeRequest"
        required: true
      responses:
        "200":
          description: Reamaze search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchReamazeResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/usage:
    get:
      tags:
        - usage
      summary: Get usage details
      operationId: getUsage
      responses:
        "200":
          description: Usage details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUsageResponse"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/datasources:
    post:
      tags:
        - datasources
      summary: Create a new datasource
      operationId: createDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasourceRequest"
        required: true
      responses:
        "200":
          description: Datasource created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasourceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - datasources
      summary: Get all datasources
      operationId: getDatasources
      responses:
        "200":
          description: Datasources retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDatasourcesResponse"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/v1/datasources/{datasourceId}":
    get:
      tags:
        - datasources
      summary: Get a datasource
      operationId: getDatasource
      parameters:
        - name: datasourceId
          in: path
          description: Datasource ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Datasource details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDatasourceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - datasources
      summary: Delete a datasource
      operationId: deleteDatasource
      parameters:
        - name: datasourceId
          in: path
          description: Datasource ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Datasource deletion initiated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/v1/datasources/{datasourceId}/upload":
    post:
      tags:
        - datasources
      summary: Upload files to a datasource
      operationId: uploadToDatasource
      parameters:
        - name: datasourceId
          in: path
          description: Datasource ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: File upload results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadToDatasourceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/v1/datasources/{datasourceId}/files/{fileId}":
    delete:
      tags:
        - datasources
      summary: Delete a file from a datasource
      operationId: deleteDatasourceFile
      parameters:
        - name: datasourceId
          in: path
          required: true
          description: Datasource ID
          schema:
            type: string
        - name: fileId
          in: path
          required: true
          description: File ID to delete
          schema:
            type: string
      responses:
        "200":
          description: File deletion initiated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/content/search:
    post:
      tags:
        - content
      summary: Search for answers
      operationId: searchAnswers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
        required: true
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/content/search/links:
    post:
      tags:
        - content
      summary: Search for links
      operationId: searchLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchLinksRequest"
        required: true
      responses:
        "200":
          description: Links search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchLinksResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/content/chat:
    post:
      tags:
        - content
      summary: Start a chat
      operationId: startChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartChatRequest"
        required: true
      responses:
        "200":
          description: Chat started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartChatResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/content/article:
    post:
      tags:
        - content
      summary: Generate article
      operationId: generateArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateArticleRequest"
        required: true
      responses:
        "200":
          description: Article generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateArticleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/content/email:
    post:
      tags:
        - content
      summary: Generate email
      operationId: generateEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateEmailRequest"
        required: true
      responses:
        "200":
          description: Email generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateEmailResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /v1/content:
    post:
      tags:
        - content
      summary: Generate text
      operationId: generateText
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateTextRequest"
        required: true
      responses:
        "200":
          description: Text generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateTextResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  schemas:
    RegisterAccountRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    UnregisterAccountRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
    CreateAPIKeyRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    CreateProjectRequest:
      type: object
      required:
        - name
        - datasourceId
      properties:
        name:
          type: string
        datasourceId:
          type: string
    CreateIntegrationRequest:
      type: object
      required:
        - name
        - type
        - selectedSources
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - REAMZE_SEARCH
            - REAMAZE_MODULE
        selectedSources:
          type: array
          items:
            type: string
        brand:
          type: string
        reamazeEmail:
          type: string
        reamazeAPIToken:
          type: string
    CreateDatasourceRequest:
      type: object
      required:
        - name
        - type
        - connectionInfo
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - WEB
            - S3
            - REAMAZE
            - FILES
            - CONFLUENCE
        cronSchedule:
          type: string
        connectionInfo:
          type: object
    SearchRequest:
      type: object
      required:
        - question
      properties:
        question:
          type: string
    SearchLinksRequest:
      type: object
      required:
        - question
      properties:
        question:
          type: string
    StartChatRequest:
      type: object
      required:
        - question
      properties:
        question:
          type: string
    GenerateArticleRequest:
      type: object
      required:
        - title
        - intro
        - sections
      properties:
        title:
          type: string
        intro:
          type: string
        sections:
          type: array
          items:
            type: string
    GenerateEmailRequest:
      type: object
      required:
        - subject
        - sections
      properties:
        subject:
          type: string
        sections:
          type: array
          items:
            type: string
    GenerateTextRequest:
      type: object
      required:
        - text
        - structure
      properties:
        text:
          type: string
        structure:
          type: string
          enum:
            - email
            - blog
            - documentation
    SearchReamazeRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
    APIResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            message:
              type: string
    LoginResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            accessToken:
              type: string
            refreshToken:
              type: string
    RefreshTokenResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            accessToken:
              type: string
            refreshToken:
              type: string
    CreateAPIKeyResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            apiKey:
              type: string
            message:
              type: string
    GetAPIKeysResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/APIKey"
    GetAPIKeyResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/APIKey"
    CreateProjectResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            projectId:
              type: string
            message:
              type: string
    GetProjectsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Project"
    GetProjectResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Project"
    CreateIntegrationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            integrationId:
              type: string
            message:
              type: string
    GetIntegrationsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Integration"
    GetIntegrationResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Integration"
    CreateDatasourceResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            datasourceId:
              type: string
            message:
              type: string
    GetDatasourcesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Datasource"
    GetDatasourceResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Datasource"
    UploadToDatasourceResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            successfulUploads:
              type: array
              items:
                type: object
                properties:
                  filename:
                    type: string
            failedUploads:
              type: array
              items:
                type: object
                properties:
                  filename:
                    type: string
                  reason:
                    type: string
    SearchResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/SearchResult"
    SearchLinksResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Link"
    StartChatResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            message:
              type: string
    GenerateArticleResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            article:
              type: string
    GenerateEmailResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            email:
              type: string
    GenerateTextResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            text:
              type: string
    SearchReamazeResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ReamazeResult"
    GetUsageResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/UsageDetails"
    APIKey:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        userId:
          type: string
        created:
          type: integer
          format: int64
        apiKey:
          type: string
    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        datasourceId:
          type: string
        userId:
          type: string
        created:
          type: integer
          format: int64
        enabled:
          type: boolean
        deleted:
          type: boolean
    Integration:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - REAMZE_SEARCH
            - REAMAZE_MODULE
        userId:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        apiKey:
          type: string
        properties:
          type: object
    Datasource:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        userId:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - CREATED
            - PROCESSING
            - READY
            - FAILED
            - DELETING
        enabled:
          type: boolean
        atype:
          type: string
          enum:
            - WEB
            - S3
            - REAMAZE
            - FILES
            - CONFLUENCE
        cronSchedule:
          type: string
        connectionInfo:
          type: object
    SearchResult:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        docId:
          type: string
        highlights:
          type: array
          items:
            type: object
            properties:
              text:
                type: array
                items:
                  type: string
    Link:
      type: object
      properties:
        title:
          type: string
        url:
          type: string
        description:
          type: string
    ReamazeResult:
      type: object
      properties:
        title:
          type: string
        url:
          type: string
        description:
          type: string
    UsageDetails:
      type: object
      properties:
        requestsThisMonth:
          type: integer
        requestsTotal:
          type: integer
        contentGeneratedThisMonth:
          type: integer
        contentGeneratedTotal:
          type: integer
        chatMinutesThisMonth:
          type: integer
        chatMinutesTotal:
          type: integer
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIResponse"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIResponse"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIResponse"
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIResponse"
    TooManyRequests:
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIResponse"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/APIResponse"
